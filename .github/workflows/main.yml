name: "a"

on:
  push:
    tags:
      - '**'

env:
  BUILD_OS: linux
  BUILD_ARCH: amd64

  GO_VERSION: 1.19
  GOFLAGS: -mod=readonly

  NODE_VERSION: 16


jobs:
  server-web-console-build:
    name: "Server Web Console Build"
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with: { node-version: "${{ env.NODE_VERSION }}" }
      - uses: actions/cache@v3
        if: ${{ !env.ACT }}
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.OS }}-node-
      - name: "Setup YARN"
        run: npm install -g yarn @vue/cli-service
      - name: "Install dependencies"
        working-directory: server/webconsole
        run: yarn install
      - name: "Build Package"
        working-directory: server/webconsole
        run: yarn build
      - name: "Cache console build"
        uses: actions/cache@v3
        with: { path: ./server/webconsole/dist, key: console-build }
        
  server-release:
    name: "Server Release (${{ matrix.os }})"
    strategy:
      fail-fast: true
      matrix:
        include:
          - { runsOn: "ubuntu-20.04", os: "linux" }
          # - { runsOn: "macos-latest",  os: "darwin" }
    runs-on: ${{ matrix.runsOn }}
    needs: [ server-web-console-build ]
    env:
      BUILD_OS: ${{ matrix.os }}
      RELEASE_SFTP_KEY: ${{ secrets.RELEASE_SFTP_KEY }}
      RELEASE_SFTP_URI: ${{ secrets.RELEASE_SFTP_URI }}
    steps:
      - run: echo "BUILD_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with: { go-version: "${{ env.GO_VERSION }}" }
      - name: "Restore web console dist from cache"
        uses: actions/cache@v3
        with: { path: ./server/webconsole/dist, key: console-build }
      - name: "Copy essentials"
        run: cp *.md DCO LICENSE server/
      - name: "Copy language files"
        working-directory: server/pkg/locale
        run: make src/en src/de src/fr
      - name: "Build"
        working-directory: server
        run: make release-clean release
      - name: "Upload"
        working-directory: server
        run: make upload
        if: ${{ !env.ACT }}
